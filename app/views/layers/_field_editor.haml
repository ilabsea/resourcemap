.box.right.w30.feditor-sidebar{ko(with: '$root.currentField', visible: '$root.currentField', style: {marginTop: '$root.currentFieldMarginTop'}), style: 'position:relative'}
  %p.title= t('views.layers.form.field.type')
  %p.smalltext= t('views.layers.form.field.the_data_type_to_fill_in_this_field')
  %div{"data-bind" => "text: kind_titleize"}

  /ko if: isAllowDigitPrecisionConfig()
  = render 'layers/fields/config/digit_precision'
  //ko

  = render 'layers/fields/base'

  /ko if: isAllowMandatoryConfig()
  = render 'layers/fields/config/mandatory'
  //ko
  
  /ko if: kind() == 'numeric'
  %hr/
  = ko_check_box_tag 'impl().is_enable_range', css: {error: :codeError}
  %label
    Enable Range  

  %div{ko(if: 'impl().is_enable_range'), style: 'width:275px'}
    %br/
    %p.smalltext Mininum
    = ko_number_field_tag 'impl().minimum', css: {error: :error}, event: {keydown: 'impl().validate_number_only'}
    %br/
    %br/
    %p.smalltext Maximum
    = ko_number_field_tag 'impl().maximum', css: {error: :error}, event: {keydown: 'impl().validate_number_only'}
  //ko

  /ko if: kind() == 'text'
  = render 'layers/advanced_field_editor'
  //ko

  /ko if: $root.selectLogicLayers().length > 0
  /ko if: kind() == 'numeric'
  %hr/
  = ko_check_box_tag :is_enable_field_logic, css: {error: :codeError}
  %label
    = t('views.layers.form.field.enable_skip_logic_for_this_field')
  %div{ko(if: :is_enable_field_logic)}
    = render :partial => "field_logic_numeric"    
  //ko

  /ko if: kind() == 'yes_no'
  %hr/
  = ko_check_box_tag :is_enable_field_logic, css: {error: :codeError}
  %label
    = t('views.layers.form.field.enable_skip_logic_for_this_field')  


  /ko if: isWidgetable()
  = render 'layers/fields/config/custom_widgeted'
  //ko

  /ko if: isSelectable()
  = render 'layers/fields/config/option'
  //ko

  /ko if: kind() == 'text'
  = render 'layers/fields/config/advanced_field_editor'
  //ko


  /ko if: isAllowFieldLogicConfig()
  = render 'layers/fields/config/field_logic'
  //ko

  /ko if: kind() == 'numeric'
  = render 'layers/fields/config/range'
  = render 'layers/fields/config/custom_validation'
  //ko

  /ko if: kind() == 'hierarchy'
  = render 'layers/fields/config/dependancy_hierarchy'
  = render 'layers/fields/hierarchy'

  //ko

  /ko if: kind() == 'calculation'
  = render 'layers/fields/calculation'
  //ko

  /ko if: kind() == 'location'
  = render 'layers/fields/location'
  //ko

  /ko if: kind() == 'custom_widget'
  = render 'layers/fields/custom_widget'
  //ko

  - Field::plugin_kinds.each do |name, kind|
    - if kind[:property_editor]
      <!-- ko if: kind() == '#{name}' -->
      = render kind[:property_editor]
      <!-- /ko -->
  %br/
  %br/

.clear
